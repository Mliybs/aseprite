name: build
on: [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        build_type: [Release]
        enable_ui: [on]
        include:
          - os: ubuntu-latest
            build_type: Release
            enable_ui: on
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1
      if: runner.os == 'Linux'
      with:
        key: ${{ matrix.os }}-${{ matrix.enable_ui }}
    - uses: seanmiddleditch/gha-setup-ninja@master
    - uses: ilammy/msvc-dev-cmd@v1
      if: runner.os == 'Windows'
    - name: Generating Makefiles
      shell: bash
      run: |
        sudo apt-get install -y g++ clang libc++-dev libc++abi-dev cmake ninja-build libx11-dev libxcursor-dev libxi-dev libgl1-mesa-dev libfontconfig1-dev webp
        export enable_ccache=off
        wget https://github.com/aseprite/skia/releases/download/m102-861e4743af/Skia-Linux-Release-x64-libc++.zip
        7z x Skia-Linux-Release-x64-libc++.zip
        mkdir build
        cd build
        export CC=clang
        export CXX=clang++
        cmake \
          -DCMAKE_BUILD_TYPE=RelWithDebInfo \
          -DCMAKE_CXX_FLAGS:STRING=-stdlib=libc++ \
          -DCMAKE_EXE_LINKER_FLAGS:STRING=-stdlib=libc++ \
          -DLAF_BACKEND=skia \
          -DSKIA_DIR=$HOME/deps/skia \
          -DSKIA_LIBRARY_DIR=$HOME/Skia-Linux-Release-x64-libc++/out/Release-x64 \
          -DSKIA_LIBRARY=$HOME/Skia-Linux-Release-x64-libc++/out/Release-x64/libskia.a \
          -G Ninja \ ..
    - name: Compiling
      shell: bash
      run: |
        cd build && ninja aseprite
    - uses: actions/upload-artifact@v3
      with:
        name: aseprite
        path: |
          $HOME/Skia-Linux-Release-x64-libc++/aseprite/build/bin/aseprite
